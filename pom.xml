<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2021 3River Development LLC, DBA Impact Upgrade. All rights reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.3</version>
  </parent>

  <groupId>com.impactupgrade</groupId>
  <artifactId>nucleus-parent</artifactId>
  <version>2.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Nonprofit Nucleus: Parent</name>
  <description>TODO</description>
  <url>https://www.impactupgrade.com/nonprofit-nucleus</url>
  <scm>
    <url>https://github.com/impactupgrade/nucleus-parent</url>
  </scm>
  <organization>
    <name>Impact Upgrade</name>
    <url>https://www.impactupgrade.com</url>
  </organization>
  <developers>
    <developer>
      <name>Brett Meyer</name>
      <email>brett@impactupgrade.com</email>
      <organization>Impact Upgrade</organization>
      <organizationUrl>https://www.impactupgrade.com</organizationUrl>
    </developer>
  </developers>

  <properties>
    <java.version>16</java.version>

<!--    <version.cxf>3.3.10</version.cxf>-->
    <version.guava>30.1.1-jre</version.guava>
    <!-- TODO: Would love to upgrade Jersey/Jetty and start using Jakarta APIs, but CXF (even 3.4) doesn't support it (entirely) yet... -->
<!--    <version.jersey>2.34</version.jersey>-->
<!--    <version.jetty>9.4.40.v20210413</version.jetty>-->
<!--    <version.log4j>2.14.1</version.log4j>-->
<!--    <version.mail>1.6.2</version.mail>-->
<!--    <version.spring>4.1.0.RELEASE</version.spring>-->
    <version.stripe>20.66.0</version.stripe>
    <version.twilio>8.17.0</version.twilio>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web-services</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

<!--    &lt;!&ndash; JAXWS for Java 11+ &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>com.sun.xml.ws</groupId>-->
<!--      <artifactId>jaxws-rt</artifactId>-->
<!--      <version>3.0.1</version>-->
<!--      <type>pom</type>-->
<!--      <exclusions>-->
<!--        &lt;!&ndash; Conflicts with what we're already using &ndash;&gt;-->
<!--        <exclusion>-->
<!--          <groupId>com.sun.mail</groupId>-->
<!--          <artifactId>jakarta.mail</artifactId>-->
<!--        </exclusion>-->
<!--      </exclusions>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>com.sun.xml.ws</groupId>-->
<!--      <artifactId>rt</artifactId>-->
<!--      <version>3.0.1</version>-->
<!--      <exclusions>-->
<!--        &lt;!&ndash; Conflicts with what we're already using &ndash;&gt;-->
<!--        <exclusion>-->
<!--          <groupId>com.sun.mail</groupId>-->
<!--          <artifactId>jakarta.mail</artifactId>-->
<!--        </exclusion>-->
<!--      </exclusions>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; Jetty provides the underlying, embedded web server. &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.eclipse.jetty</groupId>-->
<!--      <artifactId>jetty-server</artifactId>-->
<!--      <version>${version.jetty}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.eclipse.jetty</groupId>-->
<!--      <artifactId>jetty-servlet</artifactId>-->
<!--      <version>${version.jetty}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.eclipse.jetty</groupId>-->
<!--      <artifactId>jetty-servlets</artifactId>-->
<!--      <version>${version.jetty}</version>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; Jersey provides the API/REST server bits &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.core</groupId>-->
<!--      <artifactId>jersey-server</artifactId>-->
<!--      <version>${version.jersey}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.containers</groupId>-->
<!--      <artifactId>jersey-container-servlet-core</artifactId>-->
<!--      <version>${version.jersey}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.media</groupId>-->
<!--      <artifactId>jersey-media-json-jackson</artifactId>-->
<!--      <version>${version.jersey}</version>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.inject</groupId>-->
<!--      <artifactId>jersey-hk2</artifactId>-->
<!--      <version>${version.jersey}</version>-->
<!--    </dependency>-->
<!--    &lt;!&ndash; Also using Jersey as the HTTP client. &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.core</groupId>-->
<!--      <artifactId>jersey-client</artifactId>-->
<!--      <version>${version.jersey}</version>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; Using CXF to handle the SOAP server bits &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.apache.cxf</groupId>-->
<!--      <artifactId>cxf-rt-frontend-jaxws</artifactId>-->
<!--      <version>${version.cxf}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.apache.cxf</groupId>-->
<!--      <artifactId>cxf-rt-transports-http-jetty</artifactId>-->
<!--      <version>${version.cxf}</version>-->
<!--    </dependency>-->
<!--    &lt;!&ndash; used by CXF &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.springframework</groupId>-->
<!--      <artifactId>spring-context</artifactId>-->
<!--      <version>${version.spring}</version>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; DB access, currently limited to Donation Spring &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.hibernate</groupId>-->
<!--      <artifactId>hibernate-core</artifactId>-->
<!--      <version>5.5.4.Final</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.postgresql</groupId>-->
<!--      <artifactId>postgresql</artifactId>-->
<!--      <version>42.2.23.jre7</version>-->
<!--    </dependency>-->

    <!-- 3rd party SDKs -->
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>salesforce-java-tools</artifactId>
      <version>0.3.0.Final</version>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-wsc</artifactId>
      <version>48.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>${version.stripe}</version>
    </dependency>
    <!-- Need GSON to unmarshall Stripe events, but transitive dep is runtime scope :( -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.7</version>
    </dependency>
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>paymentspring-java-client</artifactId>
      <version>1.0.8.Final</version>
    </dependency>
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>hubspot-java-client</artifactId>
      <version>2.0.1.Final</version>
    </dependency>
    <dependency>
      <groupId>com.twilio.sdk</groupId>
      <artifactId>twilio</artifactId>
      <version>${version.twilio}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

<!--    &lt;!&ndash; email &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>com.sun.mail</groupId>-->
<!--      <artifactId>javax.mail</artifactId>-->
<!--      <version>${version.mail}</version>-->
<!--    </dependency>-->

    <!-- misc -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${version.guava}</version>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>commons-io</groupId>-->
<!--      <artifactId>commons-io</artifactId>-->
<!--      <version>2.6</version>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.8</version>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>commons-validator</groupId>-->
<!--      <artifactId>commons-validator</artifactId>-->
<!--      <version>1.7</version>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20210307</version>
    </dependency>
    <!-- country code <-> country name conversions -->
    <dependency>
      <groupId>com.neovisionaries</groupId>
      <artifactId>nv-i18n</artifactId>
      <version>1.28</version>
    </dependency>
    <!-- csv lib -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
      <version>${jackson-bom.version}</version>
    </dependency>

    <!-- jruby (making use of a ruby script for SFDC exports -->
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby</artifactId>
      <version>9.2.19.0</version>
    </dependency>

    <!-- for storing any file backups -->
    <dependency>
      <groupId>com.backblaze.b2</groupId>
      <artifactId>b2-sdk-core</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.backblaze.b2</groupId>
      <artifactId>b2-sdk-httpclient</artifactId>
      <version>5.0.0</version>
    </dependency>

<!--    &lt;!&ndash; logging &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-api</artifactId>-->
<!--      <version>${version.log4j}</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-core</artifactId>-->
<!--      <version>${version.log4j}</version>-->
<!--      <scope>runtime</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-slf4j-impl</artifactId>-->
<!--      <version>${version.log4j}</version>-->
<!--      <scope>runtime</scope>-->
<!--    </dependency>-->

<!--    &lt;!&ndash; testing &ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>org.junit.jupiter</groupId>-->
<!--      <artifactId>junit-jupiter-engine</artifactId>-->
<!--      <version>5.7.2</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.mockito</groupId>-->
<!--      <artifactId>mockito-junit-jupiter</artifactId>-->
<!--      <version>3.11.2</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.test-framework</groupId>-->
<!--      <artifactId>jersey-test-framework-core</artifactId>-->
<!--      <version>2.34</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
<!--      <artifactId>jersey-test-framework-provider-external</artifactId>-->
<!--      <version>2.34</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>16</source>
          <target>16</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <release>16</release>
        </configuration>
      </plugin>

      <!-- required by Heroku, since the Procfile adds target/dependency/* to the classpath -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals><goal>copy-dependencies</goal></goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <!--
    Using https://github.com/impactupgrade/nucleus-parent/packages as a private repo. Assumes you have the following in your ~/.m2/settings.xml:

    <server>
      <id>github</id>
      <configuration>
        <httpHeaders>
          <property>
            <name>YOUR USERNAME</name>
            <value>YOUR TOKEN</value>
          </property>
        </httpHeaders>
      </configuration>
    </server>

    Create your own token here: https://github.com/settings/tokens/new. Enable the "write:packages" scope.
-->

  <repositories>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/impactupgrade/*</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <!-- allow sonatype snapshots, primarily for open source SDKs from Impact Upgrade -->
    <repository>
      <id>oss.sonatype.org-snapshot</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>github</id>
      <url>https://maven.pkg.github.com/impactupgrade/nucleus-parent</url>
    </snapshotRepository>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/impactupgrade/nucleus-parent</url>
    </repository>
  </distributionManagement>
</project>
